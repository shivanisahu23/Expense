[project]
name = "expensemanager"
authors = [
    { name = "Shivani Sahu", email = "shivanisahu23@navgurukul.org"}
]
description = "**ExpenseManager** is a comprehensive application designed to streamline employee expense management within organizations. It allows employees to easily submit expense claims for various categories such as travel and meals, complete with essential details like date and amount. The app features a robust approval workflow where claims are initially submitted, reviewed by managers, and marked as approved or rejected. With role-based permissions ensuring that only authorized personnel can submit and approve claims, ExpenseManager enhances security and accountability. Additionally, it provides real-time status tracking and valuable insights into expense trends, ultimately increasing efficiency and improving financial management for organizations."
requires-python = ">=3.10"
readme = "README.md"
dynamic = ["version"]
dependencies = [
    # "frappe~=15.0.0" # Installed and managed by bench.
]

[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

# These dependencies are only installed when developer mode is enabled
[tool.bench.dev-dependencies]
# package_name = "~=1.1.0"

[tool.ruff]
line-length = 110
target-version = "py310"

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "I",
    "UP",
    "B",
]
ignore = [
    "B017", # assertRaises(Exception) - should be more specific
    "B018", # useless expression, not assigned to anything
    "B023", # function doesn't bind loop variable - will have last iteration's value
    "B904", # raise inside except without from
    "E101", # indentation contains mixed spaces and tabs
    "E402", # module level import not at top of file
    "E501", # line too long
    "E741", # ambiguous variable name
    "F401", # "unused" imports
    "F403", # can't detect undefined names from * import
    "F405", # can't detect undefined names from * import
    "F722", # syntax error in forward type annotation
    "W191", # indentation contains tabs
]
typing-modules = ["frappe.types.DF"]

[tool.ruff.format]
quote-style = "double"
indent-style = "tab"
docstring-code-format = true
